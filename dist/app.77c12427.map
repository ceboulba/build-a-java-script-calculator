{"version":3,"sources":["src/js/app.js"],"names":["document","addEventListener","console","log","inputScreen","getElementById","display","input","reg","buttons","querySelectorAll","map","button","event","handleClick","inputKey","target","value","test","match","length","eval","innerText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAW;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,OAAxB,CAApB;AACA,MAAMC,OAAO,GAAGN,QAAQ,CAACK,cAAT,CAAwB,SAAxB,CAAhB;AACA,MAAIE,KAAK,GAAG,GAAZ;AACA,MAAMC,GAAG,GAAG,MAAZ;;AAEA,MAAMC,OAAO,GAAG,mBAAIT,QAAQ,CAACU,gBAAT,CAA0B,QAA1B,CAAJ,EAAyCC,GAAzC,CAA6C,UAAAC,MAAM;AAAA,WACjEA,MAAM,CAACX,gBAAP,CAAwB,OAAxB,EAAiC,UAAAY,KAAK,EAAI;AACxCC,MAAAA,WAAW,CAACD,KAAD,CAAX;AACD,KAFD,CADiE;AAAA,GAAnD,CAAhB;;AAMA,WAASC,WAAT,CAAqBD,KAArB,EAA4B;AAC1B,QAAME,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA9B;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BY,QAA5B;AACA,QAAMG,IAAI,GAAGX,KAAK,CAACY,KAAN,CAAYX,GAAZ,CAAb;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBe,IAAxB;;AACA,QAAIH,QAAQ,KAAK,GAAb,IAAoBR,KAAK,CAACa,MAAN,GAAe,CAAvC,EAA0C;AACxCb,MAAAA,KAAK,GAAGc,IAAI,CAACd,KAAD,CAAZ;AACAD,MAAAA,OAAO,CAACgB,SAAR,GAAoBf,KAApB;AACD,KAHD,MAGO,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAC3BA,MAAAA,KAAK,GAAGQ,QAAR;AACAT,MAAAA,OAAO,CAACgB,SAAR,GAAoBf,KAApB;AACD,KAHM,MAGA,IAAIQ,QAAQ,KAAK,OAAjB,EAA0B;AAC/BR,MAAAA,KAAK,GAAG,GAAR;AACAD,MAAAA,OAAO,CAACgB,SAAR,GAAoBf,KAApB;AACD,KAHM,MAGA;AACLA,MAAAA,KAAK,IAAIQ,QAAT;AACAT,MAAAA,OAAO,CAACgB,SAAR,GAAoBf,KAApB;AACD;;AACDD,IAAAA,OAAO,CAACgB,SAAR,GAAoBf,KAApB;AACD;AACF,CAlCD,GAoCA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.77c12427.map","sourceRoot":"..","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\r\n  console.log(\"hello\")\r\n\r\n  const inputScreen = document.getElementById(\"input\")\r\n  const display = document.getElementById(\"display\")\r\n  let input = \"0\"\r\n  const reg = /\\./gm\r\n\r\n  const buttons = [...document.querySelectorAll(\"button\")].map(button =>\r\n    button.addEventListener(\"click\", event => {\r\n      handleClick(event)\r\n    })\r\n  )\r\n\r\n  function handleClick(event) {\r\n    const inputKey = event.target.value\r\n    console.log(\"inputKey => \", inputKey)\r\n    const test = input.match(reg)\r\n    console.log(\"test => \", test)\r\n    if (inputKey === \"=\" && input.length > 1) {\r\n      input = eval(input)\r\n      display.innerText = input\r\n    } else if (input[0] === \"0\") {\r\n      input = inputKey\r\n      display.innerText = input\r\n    } else if (inputKey === \"reset\") {\r\n      input = \"0\"\r\n      display.innerText = input\r\n    } else {\r\n      input += inputKey\r\n      display.innerText = input\r\n    }\r\n    display.innerText = input\r\n  }\r\n})\r\n\r\n// let operation = []\r\n// let output = []\r\n// let result = document.querySelector('#display')\r\n// let resultat = ['0']\r\n\r\n// const display = document.querySelector('#display')\r\n\r\n// const nums = [...document.querySelectorAll('.num')].map(num =>\r\n//   num.addEventListener('click', e => {\r\n//     action(e)\r\n//   })\r\n// )\r\n\r\n// function daboum() {\r\n//   console.log('BOUM')\r\n// }\r\n// daboum()\r\n\r\n// const operators = [...document.querySelectorAll('.op')].map(op =>\r\n//   op.addEventListener('click', e => {\r\n//     operate(e)\r\n//   })\r\n// )\r\n\r\n// const clear = document\r\n//   .querySelector('#clear')\r\n//   .addEventListener('click', () => {\r\n//     operation = ['0']\r\n//     display.innerText = operation.join('')\r\n//   })\r\n\r\n// const equal = document.querySelector('.equ').addEventListener('click', () => {\r\n//   if (operation.length >= 1) {\r\n//     const temp = eval(operation.join(''))\r\n//     console.log(temp)\r\n//     display.innerHTML = temp\r\n//     operation = [temp]\r\n//   }\r\n//   return\r\n// })\r\n\r\n// const operate = operator => {\r\n//   if (operator.target.innerText === 'x') {\r\n//     operation.push('*')\r\n//   } else {\r\n//     operation.push(operator.target.innerText)\r\n//   }\r\n//   display.innerText = operation.join('')\r\n// }\r\n\r\n// function action(e) {\r\n//   if (operation[0] === '0') {\r\n//     operation.shift()\r\n//   }\r\n//   operation.push(e.target.innerText)\r\n//   display.innerText = operation.join('')\r\n//   console.log('operation => ', operation)\r\n// }\r\n"]}