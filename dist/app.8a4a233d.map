{"version":3,"sources":["src\\js\\app.js"],"names":["document","addEventListener","inputScreen","getElementById","display","input","output","current","reg","regOp","doingCalc","buttons","querySelectorAll","map","button","handleClick","event","updateScreen","innerText","onlyOneOperator","op","n","length","slice","console","log","add","substract","multiply","divide","equal","verif","match","eval","Math","floor","clear","inputKey","target","value","testDeReg"],"mappings":"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","file":"app.8a4a233d.map","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n  //gere les zone d'affichage\r\n  const inputScreen = document.getElementById('input')\r\n  const display = document.getElementById('display')\r\n\r\n  //init les valeurs des variables utiles\r\n  let input = '0'\r\n  let output = ''\r\n  let current = ''\r\n\r\n  //quellques regEx necessaires\r\n  const reg = /\\./gm\r\n  const regOp = /[*\\-+\\/]/gi\r\n\r\n  //valide la possibilitÃ©e de calculer\r\n  let doingCalc = true\r\n\r\n  //rend les chiffres clickable\r\n  const buttons = [...document.querySelectorAll('.num')].map(button =>\r\n    button.addEventListener('click', event => {\r\n      handleClick(event)\r\n    })\r\n  )\r\n\r\n  //update inputScreen\r\n  function updateScreen(input) {\r\n    current += input\r\n    inputScreen.innerText = current\r\n\r\n    doingCalc = true\r\n\r\n  }\r\n\r\n  //handle repeat operator\r\n  function onlyOneOperator(op) {\r\n    const n = output.length - 1\r\n    if (\r\n      output[n] === '/' ||\r\n      output[n] === '*' ||\r\n      output[n] === '-' ||\r\n      output[n] === '+'\r\n    ) {\r\n      output = output.slice(0, n)\r\n      console.log('output apres modif => ', output)\r\n    }\r\n    return\r\n  }\r\n\r\n  //handle add\r\n  const add = document\r\n    .getElementById(\"add\")\r\n    .addEventListener(\"click\", event => {\r\n      if (output[output.length - 1] === \"+\") {\r\n        return\r\n      }\r\n      output += input\r\n      onlyOneOperator(\"+\")\r\n      output += \"+\"\r\n      input = \"\"\r\n      display.innerText = \"+\"\r\n      updateScreen(\" + \")\r\n      doingCalc = true\r\n      console.log(\"output => \", output)\r\n    })\r\n\r\n  //handle substract\r\n  const substract = document\r\n    .getElementById(\"subtract\")\r\n    .addEventListener(\"click\", () => {\r\n      if (output[output.length - 1] === \"-\") {\r\n        return\r\n      }\r\n      output += input\r\n      onlyOneOperator('-')\r\n      output += '-'\r\n      input = ''\r\n      display.innerText = '-'\r\n      updateScreen(' - ')\r\n      doingCalc = true\r\n      console.log('output => ', output)\r\n    })\r\n\r\n  //handle multiply\r\n  const multiply = document\r\n    .getElementById(\"multiply\")\r\n    .addEventListener(\"click\", () => {\r\n      if (output[output.length - 1] === \"*\") {\r\n        return\r\n      }\r\n      output += input\r\n      onlyOneOperator('*')\r\n      output += '*'\r\n      input = ''\r\n      display.innerText = 'x'\r\n      updateScreen(' x ')\r\n      doingCalc = true\r\n      console.log('output => ', output)\r\n    })\r\n\r\n  //handle divide\r\n  const divide = document\r\n    .getElementById(\"divide\")\r\n    .addEventListener(\"click\", () => {\r\n      if (output[output.length - 1] === \"/\") {\r\n        return\r\n      }\r\n      output += input\r\n      onlyOneOperator('/')\r\n      output += '/'\r\n      input = ''\r\n      display.innerText = '/'\r\n      updateScreen(' / ')\r\n      doingCalc = true\r\n      console.log('output => ', output)\r\n    })\r\n\r\n  // handle equal\r\n  const equal = document\r\n    .getElementById(\"equals\")\r\n    .addEventListener(\"click\", event => {\r\n      output += input\r\n      console.log(output)\r\n      const reg = /\\+|-|\\*|\\//gm\r\n      const verif = output.match(reg)\r\n      if (output.length > 1 && verif) {\r\n        console.log(eval(output))\r\n        input = Math.floor(eval(output) * 10000) / 10000\r\n        display.innerText = input\r\n        updateScreen(' = ' + input)\r\n        output = input\r\n        input = ''\r\n        doingCalc = false\r\n      }\r\n      return\r\n    })\r\n\r\n  // handle clear button\r\n  const clear = document\r\n    .getElementById('clear')\r\n    .addEventListener('click', () => {\r\n      console.log('on reset')\r\n      input = '0'\r\n      output = ''\r\n      current = ''\r\n      display.innerText = input\r\n      inputScreen.innerText = current\r\n      doingCalc = true\r\n    })\r\n\r\n  //handle click number\r\n  function handleClick(event) {\r\n    if (doingCalc) {\r\n      const inputKey = event.target.value\r\n      const testDeReg = input.match(reg)\r\n      if (inputKey === '.' && testDeReg) {\r\n        return\r\n      } else if (input === '0' && inputKey !== '.') {\r\n        input = inputKey\r\n        display.innerText = input\r\n        updateScreen(inputKey)\r\n        return\r\n      }\r\n      input += inputKey\r\n      display.innerText = input\r\n      updateScreen(inputKey)\r\n      console.log(\"input => \", input)\r\n    }\r\n    return\r\n  }\r\n})\r\n"]}